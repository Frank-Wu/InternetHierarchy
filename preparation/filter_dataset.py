'''
this script executes several commands sequentially.
1. Removes prefix 'ASPATH' generated by bgpdump;
2. Filters out duplicated paths using bloom filter;
3. Remove paths containing AS_SET and AS_PREPENDING;
4. Filters out duplicated paths using bloom filter.
'''

import os
import pybloomfilter

#remove prefix
def remove_prefix(infilename, outfilename):
	infile=file(infilename, 'r')
	outfile=file(outfilename, 'w')
	while 1:
		line=infile.readline()
		if line=='':
			break
		line=line.lstrip('ASPATH: ').strip().split()
		outfile.write(' '.join(line)+'\n')
		
#remove  duplicated paths
def filter_path(infilename, outfilename):
	infile=file(infilename, 'r')
	outfile=file(outfilename, 'w')
	bf=pybloomfilter.BloomFilter(1000000, 0.000001, 'bloom')
	while 1:
		line=infile.readline()
		if line=='':
			break
		if not bf.add(line):
			outfile.write(line)

#remove AS_SET and AS_PREPENDING
def remove_path(infilename, outfilename):
	infile=file(infilename, 'r')
	outfile=file(outfilename, 'w')
	while 1:
		line=infile.readline()
		if line=='':
			break
		if '[' in line or ']' in line or '{' in line or '}' in line:
			continue
		line=line.split()
		if len(line)==1:
			continue
		newline=[line[0]]
		for i in range(1, len(line)):
			if line[i]!=line[i-1]:
				newline.append(line[i])
		outfile.write(' '.join(line)+'\n')
			


def preprocess_path(infilename, outfilename):
	remove_prefix(infilename, 'tmp1')
	filter_path('tmp1', 'tmp2')
	remove_path('tmp2', 'tmp3')
	filter_path('tmp3', outfilename)

def traverse_directory(directory, function):
	for root, dirs, files in os.walk(directory):
		for filename in files:
			infilename=os.path.join(root, filename)
			outfilename='processed/'+infilename
			function(infilename, outfilename)


if __name__=='__main__':
	traverse_directory('dataset_rrc00_1999', preprocess_path)

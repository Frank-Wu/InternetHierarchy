'''
this script executes several commands sequentially.
1. Removes prefix 'ASPATH' generated by bgpdump;
2. Filters out duplicated paths using bloom filter;
3. Remove paths containing AS_SET and AS_PREPENDING;
4. Filters out duplicated paths using bloom filter.
'''

import os
import sys
import re
import pybloomfilter

#remove prefix
def remove_prefix(infilename, outfilename):
	infile=file(infilename, 'r')
	outfile=file(outfilename, 'w')
	while 1:
		line=infile.readline()
		if line=='':
			break
		line=line.lstrip('ASPATH: ').strip().split()
		outfile.write(' '.join(line)+'\n')
		
#remove duplicated paths
def filter_path(infilename, outfilename):
	infile=file(infilename, 'r')
	outfile=file(outfilename, 'w')
	bf=pybloomfilter.BloomFilter(10000000, 0.000001, outfilename+'bloom')
	while 1:
		line=infile.readline()
		if line=='':
			break
		if not bf.add(line):
			outfile.write(line)

#remove AS_SET and AS_PREPENDING
def remove_path(infilename, outfilename):
	infile=file(infilename, 'r')
	outfile=file(outfilename, 'w')
	while 1:
		try:
			line=infile.readline()
			if line=='':
				break
			if '[' in line or ']' in line or '{' in line or '}' in line:
				continue
			re.sub("[^0-9]", "", line)
			line=line.split()
			if len(line)<=1:
				continue
			newline=[line[0]]
			for i in range(1, len(line)):
				if int(line[i])!=int(line[i-1]):
					newline.append(line[i])
			outfile.write(' '.join(newline)+'\n')
		except:
			continue


def preprocess_path(infilename, outfilename):
	remove_prefix(infilename, outfilename+'tmp1')
	filter_path(outfilename+'tmp1', outfilename+'tmp2')
	remove_path(outfilename+'tmp2', outfilename+'tmp3')
	filter_path(outfilename+'tmp3', outfilename)

def traverse_directory(directory, function):
	for root, dirs, files in os.walk(directory):
		for filename in files:
			infilename=os.path.join(root, filename)
			outfilename='dataset/'+filename
			function(infilename, outfilename)


if __name__=='__main__':
	repo=sys.argv[1]
	year=sys.argv[2]
	month=sys.argv[3]
	filename='rrc'+repo+'.'+year+'.'+month
	preprocess_path('rawdataset/'+filename, 'dataset/'+filename)
	'''
	year=sys.argv[1]
	month=sys.argv[2]
	filename=year+'.'+month
	filter_path('mergerawdataset/'+filename, 'mergedataset/'+filename)
	'''

